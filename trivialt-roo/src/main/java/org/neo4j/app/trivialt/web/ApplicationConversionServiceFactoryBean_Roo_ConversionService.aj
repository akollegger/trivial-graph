// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.neo4j.app.trivialt.web;

import java.lang.String;
import org.neo4j.app.trivialt.model.Answer;
import org.neo4j.app.trivialt.model.Category;
import org.neo4j.app.trivialt.model.FramedQuestion;
import org.neo4j.app.trivialt.model.Match;
import org.neo4j.app.trivialt.model.Media;
import org.neo4j.app.trivialt.model.Player;
import org.neo4j.app.trivialt.model.Proposal;
import org.neo4j.app.trivialt.model.Question;
import org.neo4j.app.trivialt.model.Round;
import org.neo4j.app.trivialt.model.Team;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(new AnswerConverter());
        registry.addConverter(new CategoryConverter());
        registry.addConverter(new FramedQuestionConverter());
        registry.addConverter(new MatchConverter());
        registry.addConverter(new MediaConverter());
        registry.addConverter(new PlayerConverter());
        registry.addConverter(new ProposalConverter());
        registry.addConverter(new QuestionConverter());
        registry.addConverter(new RoundConverter());
        registry.addConverter(new TeamConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
    static class org.neo4j.app.trivialt.web.ApplicationConversionServiceFactoryBean.AnswerConverter implements Converter<Answer, String> {
        public String convert(Answer answer) {
            return new StringBuilder().append(answer.getText()).toString();
        }
        
    }
    
    static class org.neo4j.app.trivialt.web.ApplicationConversionServiceFactoryBean.CategoryConverter implements Converter<Category, String> {
        public String convert(Category category) {
            return new StringBuilder().append(category.getName()).toString();
        }
        
    }
    
    static class org.neo4j.app.trivialt.web.ApplicationConversionServiceFactoryBean.FramedQuestionConverter implements Converter<FramedQuestion, String> {
        public String convert(FramedQuestion framedQuestion) {
            return new StringBuilder().append(framedQuestion.getPhrase()).append(" ").append(framedQuestion.getHint()).append(" ").append(framedQuestion.getExplanation()).toString();
        }
        
    }
    
    static class org.neo4j.app.trivialt.web.ApplicationConversionServiceFactoryBean.MatchConverter implements Converter<Match, String> {
        public String convert(Match match) {
            return new StringBuilder().append(match.getTitle()).toString();
        }
        
    }
    
    static class org.neo4j.app.trivialt.web.ApplicationConversionServiceFactoryBean.MediaConverter implements Converter<Media, String> {
        public String convert(Media media) {
            return new StringBuilder().append(media.getUrl()).append(" ").append(media.getContentType()).toString();
        }
        
    }
    
    static class org.neo4j.app.trivialt.web.ApplicationConversionServiceFactoryBean.PlayerConverter implements Converter<Player, String> {
        public String convert(Player player) {
            return new StringBuilder().append(player.getHandle()).append(" ").append(player.getName()).toString();
        }
        
    }
    
    static class org.neo4j.app.trivialt.web.ApplicationConversionServiceFactoryBean.ProposalConverter implements Converter<Proposal, String> {
        public String convert(Proposal proposal) {
            return new StringBuilder().append(proposal.getScore()).append(" ").append(proposal.getProposedAnswer()).toString();
        }
        
    }
    
    static class org.neo4j.app.trivialt.web.ApplicationConversionServiceFactoryBean.QuestionConverter implements Converter<Question, String> {
        public String convert(Question question) {
            return new StringBuilder().append(question.getText()).toString();
        }
        
    }
    
    static class org.neo4j.app.trivialt.web.ApplicationConversionServiceFactoryBean.RoundConverter implements Converter<Round, String> {
        public String convert(Round round) {
            return new StringBuilder().append(round.getTitle()).append(" ").append(round.getPointsPerQuestion()).toString();
        }
        
    }
    
    static class org.neo4j.app.trivialt.web.ApplicationConversionServiceFactoryBean.TeamConverter implements Converter<Team, String> {
        public String convert(Team team) {
            return new StringBuilder().append(team.getName()).append(" ").append(team.getSecret()).toString();
        }
        
    }
    
}
